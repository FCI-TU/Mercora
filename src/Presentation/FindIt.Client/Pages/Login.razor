@page "/login"

@inject IToastService ToastService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthenticationService

<div class="login-container d-flex flex-lg-column align-items-center text-light align-self-center justify-content-center">
	<EditForm Model="@UserData" OnValidSubmit="@loginUser" class="w-75 mx-auto">
		<DataAnnotationsValidator />

		<div
			class="main-container flex-column flex-lg-row d-flex align-items-center gap-4 rounded-1 bg-opacity-50">
			<div class="login-card d-flex flex-column w-100 h-100 py-2 ps-2">
				<div class="d-flex flex-column gap-3">
					<img src="/images/green_logo.png" alt="Logo" class="store-image w-75" />
					<p class="fw-bold text-uppercase fs-1 text-center">Welcome Back!</p>
				</div>
				<div class="d-flex flex-column gap-2 mb-3 align-items-center">
					<p>Don't have an account?</p>
					<a href="/register" class="btn submit-button py-2 rounded-5 p-3 fs-5 text-light border-0 w-50">SIGN UP</a>
				</div>
			</div>

			<div class="login-form d-flex flex-column gap-3 text-center w-100 pt-2 pe-4 ps-3">
				<div class="form-header align-self-center">
					<h2 class="fw-bold text-white login-h">Login to FindIt!</h2>

					<button data-mdb-button-init data-mdb-ripple-init 
					        class="btn btn-block btn-primary bg-white rounded-pill text-black border-0 fw-bold bg-opacity-75 d-flex flex-row align-items-center gap-3 shadow"
					        style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: 2.5rem;">
						<Icon Color="IconColor.Secondary" Size="IconSize.x4" Name="IconName.Google" />
						<p>Sign in with Google</p>
					</button>
					<hr class="mt-4 text-black w-100">
				</div>

				<div class="d-flex flex-column">
					<div class="input-wrapper fs-5 d-flex py-2 px-3 rounded-pill gap-3">
						<Icon Color="IconColor.Secondary" Size="IconSize.x4" Name="IconName.Envelope" />
						<input placeholder="Email" @bind="@UserData.Email" type="email" />
					</div>
					<ValidationMessage For="@(() => UserData.Email)" class="fw-bold text-danger" style="font-size: 0.9rem" />
				</div>

				<div class="d-flex flex-column">
					<div class="input-wrapper fs-5 d-flex py-2 px-3 rounded-pill gap-3">
						<Icon Color="IconColor.Secondary" Size="IconSize.x4" Name="IconName.Pass" />
						<input placeholder="Password" @bind="@UserData.Password" type="password" />
					</div>
					<ValidationMessage For="@(() => UserData.Password)" class="fw-bold text-danger" style="font-size: 0.9rem" />

					<p class="align-self-start mt-2 ps-4 text-black">Forget Password?</p>
				</div>

				<button class="submit-button py-2 rounded-5 p-3 fs-5 text-light border-0 w-50 align-self-center">SIGN IN</button>
			</div>
		</div>
	</EditForm>
</div>


@code {
	private readonly LoginRequest UserData = new();

	async Task loginUser()
	{
		var user = await AuthenticationService.LoginAsync(UserData);

		if (user != null)
		{
			await LocalStorage.SetItemAsync("AuthenticationToken", user.Token);

			NavigationManager.NavigateTo("/");

			ToastService.ShowSuccess("Logged in successfully!");
		}
		else
		{
			ToastService.ShowError("Invalid email or password");
		}
	}
}
